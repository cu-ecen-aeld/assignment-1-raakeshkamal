name: assignment-test
on:
    push:
        tags-ignore:
            - '*'
        branches:
            - '*'
jobs:
    unit-test:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - name: Checkout submodules
            run : git submodule update --init --recursive
          - name: Run unit test
            run: ./unit-test.sh
    full-test:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Checkout submodules
          run : |
            git submodule update --init --recursive
            # 1. Create a directory for our safe command
            mkdir -p $HOME/bin-safe
            
            # 2. Create a script inside that pretends to be 'cat'
            echo '#!/bin/bash' > $HOME/bin-safe/cat
            echo '# This script is a safe wrapper for the "cat" command.' >> $HOME/bin-safe/cat
            # If the argument is /dev/urandom, run a SAFE command that produces a FINITE stream of data.
            echo 'if [ "$1" == "/dev/urandom" ]; then' >> $HOME/bin-safe/cat
            echo '    echo "INFO: Intercepted cat /dev/urandom and ran a safer version."' >> $HOME/bin-safe/cat
            echo '    head -c 1024 /dev/urandom' >> $HOME/bin-safe/cat
            echo 'else' >> $HOME/bin-safe/cat
            # Otherwise, just run the REAL cat command.
            echo '    exec /bin/cat "$@"' >> $HOME/bin-safe/cat
            echo 'fi' >> $HOME/bin-safe/cat
            
            # Make our fake 'cat' executable
            chmod +x $HOME/bin-safe/cat
            
            # 3. Put our safe directory at the front of the PATH.
            # Now, when any script calls 'cat', it will find our version first.
            echo "$HOME/bin-safe" >> $GITHUB_PATH

        - name: Run full test
          run: ./full-test.sh

